{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Bird from \"./components/Bird\";\nimport Obstacles from \"./components/Obstacles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var screenWidth = Dimensions.get(\"screen\").width;\n  var screenHeight = Dimensions.get(\"screen\").height;\n  var birdLeft = screenWidth / 2;\n\n  var _useState = useState(screenHeight / 2),\n      _useState2 = _slicedToArray(_useState, 2),\n      birdBottom = _useState2[0],\n      setBirdBottom = _useState2[1];\n\n  var _useState3 = useState(screenWidth),\n      _useState4 = _slicedToArray(_useState3, 2),\n      obstaclesLeft = _useState4[0],\n      setObstaclesLeft = _useState4[1];\n\n  var _useState5 = useState(screenWidth + screenWidth / 2 + 30),\n      _useState6 = _slicedToArray(_useState5, 2),\n      obstaclesLeftTwo = _useState6[0],\n      setObstaclesLeftTwo = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      obstaclesNegHeight = _useState8[0],\n      setObstaclesNegHeight = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      obstaclesNegHeightTwo = _useState10[0],\n      setObstaclesNegHeightTwo = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isGameOver = _useState12[0],\n      setIsGameOver = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      score = _useState14[0],\n      setScore = _useState14[1];\n\n  var gravity = 1;\n  var obstacleWidth = 120;\n  var obstacleHeight = 300;\n  var gap = 200;\n  var setIntervalPeriod = 10;\n  var gameTimerId;\n  var obstaclesTimerId;\n  var obstaclesTimerIdTwo;\n  useEffect(function () {\n    if (birdBottom > 0) {\n      gameTimerId = setInterval(function () {\n        setBirdBottom(function (birdBottom) {\n          return birdBottom - gravity;\n        });\n      }, setIntervalPeriod);\n      return function () {\n        clearInterval(gameTimerId);\n      };\n    }\n  }, [birdBottom]);\n\n  var jump = function jump() {\n    if (!isGameOver && birdBottom < screenHeight) {\n      setBirdBottom(function (birdBottom) {\n        return birdBottom + 50;\n      });\n    }\n  };\n\n  useEffect(function () {\n    if (obstaclesLeft > -60) {\n      obstaclesTimerId = setInterval(function () {\n        setObstaclesLeft(function (obstaclesLeft) {\n          return obstaclesLeft - 5;\n        });\n      }, setIntervalPeriod);\n      return function () {\n        clearInterval(obstaclesTimerId);\n      };\n    } else {\n      setScore(function (score) {\n        return score + 1;\n      });\n      setObstaclesLeft(screenWidth);\n      setObstaclesNegHeight(-Math.random() * 100);\n    }\n  }, [obstaclesLeft]);\n  useEffect(function () {\n    if (obstaclesLeftTwo > -60) {\n      obstaclesTimerIdTwo = setInterval(function () {\n        setObstaclesLeftTwo(function (obstaclesLeftTwo) {\n          return obstaclesLeftTwo - 5;\n        });\n      }, setIntervalPeriod);\n      return function () {\n        clearInterval(obstaclesTimerIdTwo);\n      };\n    } else {\n      setScore(function (score) {\n        return score + 1;\n      });\n      setObstaclesLeftTwo(screenWidth);\n      setObstaclesNegHeightTwo(-Math.random() * 100);\n    }\n  }, [obstaclesLeftTwo]);\n  useEffect(function () {\n    if ((birdBottom < obstaclesNegHeight + obstacleHeight + 30 || birdBottom > obstaclesNegHeight + obstacleHeight + gap - 30) && obstaclesLeft > screenWidth / 2 - 30 && obstaclesLeft < screenWidth / 2 + 30 || (birdBottom < obstaclesNegHeightTwo + obstacleHeight + 30 || birdBottom > obstaclesNegHeightTwo + obstacleHeight + gap - 30) && obstaclesLeftTwo > screenWidth / 2 - 30 && obstaclesLeftTwo < screenWidth / 2 + 30) {\n      gameOver();\n    }\n  });\n\n  var gameOver = function gameOver() {\n    clearInterval(gameTimerId);\n    clearInterval(obstaclesTimerId);\n    clearInterval(obstaclesTimerIdTwo);\n    setIsGameOver(true);\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: jump,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [isGameOver && _jsx(Text, {\n        style: {\n          fontSize: '30px'\n        },\n        children: score\n      }), _jsx(Bird, {\n        birdBottom: birdBottom,\n        birdLeft: birdLeft\n      }), _jsx(Obstacles, {\n        color: 'green',\n        obstacleWidth: obstacleWidth,\n        obstacleHeight: obstacleHeight,\n        randomBottom: obstaclesNegHeight,\n        gap: gap,\n        obstaclesLeft: obstaclesLeft\n      }), _jsx(Obstacles, {\n        color: 'yellow',\n        obstacleWidth: obstacleWidth,\n        obstacleHeight: obstacleHeight,\n        randomBottom: obstaclesNegHeightTwo,\n        gap: gap,\n        obstaclesLeft: obstaclesLeftTwo\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'red'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Bird","Obstacles","App","screenWidth","Dimensions","get","width","screenHeight","height","birdLeft","birdBottom","setBirdBottom","obstaclesLeft","setObstaclesLeft","obstaclesLeftTwo","setObstaclesLeftTwo","obstaclesNegHeight","setObstaclesNegHeight","obstaclesNegHeightTwo","setObstaclesNegHeightTwo","isGameOver","setIsGameOver","score","setScore","gravity","obstacleWidth","obstacleHeight","gap","setIntervalPeriod","gameTimerId","obstaclesTimerId","obstaclesTimerIdTwo","setInterval","clearInterval","jump","Math","random","gameOver","styles","container","fontSize","StyleSheet","create","flex","backgroundColor"],"sources":["C:/Users/ericn/Code/flappy-rn/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, Dimensions, TouchableWithoutFeedback } from 'react-native';\r\nimport Bird from './components/Bird'\r\nimport Obstacles from './components/Obstacles'\r\n\r\nexport default function App() {\r\n  const screenWidth = Dimensions.get(\"screen\").width\r\n  const screenHeight = Dimensions.get(\"screen\").height\r\n  const birdLeft = screenWidth / 2\r\n  const [birdBottom, setBirdBottom]= useState(screenHeight / 2)\r\n  const [obstaclesLeft, setObstaclesLeft]= useState(screenWidth)\r\n  const [obstaclesLeftTwo, setObstaclesLeftTwo]= useState(screenWidth + screenWidth/2 + 30)\r\n  const [obstaclesNegHeight, setObstaclesNegHeight]= useState(0)\r\n  const [obstaclesNegHeightTwo, setObstaclesNegHeightTwo]= useState(0)\r\n  const [isGameOver, setIsGameOver]= useState(false)\r\n  const [score, setScore]= useState(0)\r\n  const gravity = 1\r\n  let obstacleWidth = 120\r\n  let obstacleHeight = 300\r\n  let gap = 200\r\n  let setIntervalPeriod = 10;\r\n  let gameTimerId\r\n  let obstaclesTimerId\r\n  let obstaclesTimerIdTwo\r\n  \r\n//start bird falling\r\n  useEffect(() => {\r\n    if (birdBottom > 0) {\r\n      gameTimerId = setInterval(() => {\r\n        setBirdBottom(birdBottom => birdBottom - gravity)\r\n      },setIntervalPeriod)\r\n  \r\n      return () => {\r\n        clearInterval(gameTimerId)\r\n      }\r\n    }\r\n    //if i dont have birdBottom as a dependecy, it wont stop\r\n  }, [birdBottom])\r\n  // console.log(birdBottom)\r\n\r\n  const jump = () => {\r\n    if (!isGameOver && (birdBottom < screenHeight)) {\r\n      setBirdBottom(birdBottom => birdBottom + 50)\r\n      // console.log('jumped')\r\n    }\r\n  }\r\n\r\n  //start first obstacle\r\n  useEffect(() => {\r\n    if (obstaclesLeft > -60) {\r\n      obstaclesTimerId = setInterval(() => {\r\n        setObstaclesLeft(obstaclesLeft => obstaclesLeft - 5)\r\n      }, setIntervalPeriod)\r\n      return () => {\r\n        clearInterval(obstaclesTimerId)\r\n      }\r\n    } else {\r\n      setScore(score => score +1)\r\n      setObstaclesLeft(screenWidth)\r\n      setObstaclesNegHeight( - Math.random() * 100)\r\n    }\r\n  }, [obstaclesLeft])\r\n\r\n  //start second obstacle\r\n  useEffect(() => {\r\n    if (obstaclesLeftTwo > -60) {\r\n      obstaclesTimerIdTwo = setInterval(() => {\r\n        setObstaclesLeftTwo(obstaclesLeftTwo => obstaclesLeftTwo - 5)\r\n      }, setIntervalPeriod)\r\n        return () => {\r\n          clearInterval(obstaclesTimerIdTwo)\r\n        }\r\n      } else {\r\n          setScore(score => score +1)\r\n          setObstaclesLeftTwo(screenWidth)\r\n          setObstaclesNegHeightTwo( - Math.random() * 100)\r\n        }\r\n  }, [obstaclesLeftTwo])\r\n\r\n    //check for collisions\r\n    useEffect(() => {\r\n      // console.log(obstaclesLeft)\r\n      // console.log(screenWidth/2)\r\n      // console.log(obstaclesLeft > screenWidth/2)\r\n      if (\r\n        ((birdBottom < (obstaclesNegHeight + obstacleHeight + 30) ||\r\n        birdBottom > (obstaclesNegHeight + obstacleHeight + gap -30)) &&\r\n        (obstaclesLeft > screenWidth/2 -30 && obstaclesLeft < screenWidth/2 + 30 )\r\n        )\r\n        || \r\n        ((birdBottom < (obstaclesNegHeightTwo + obstacleHeight + 30) ||\r\n        birdBottom > (obstaclesNegHeightTwo + obstacleHeight + gap -30)) &&\r\n        (obstaclesLeftTwo > screenWidth/2 -30 && obstaclesLeftTwo < screenWidth/2 + 30 )\r\n        )\r\n        ) \r\n        {\r\n        // console.log('game over')\r\n        gameOver()\r\n      }\r\n    })\r\n\r\n    const gameOver = () => {\r\n      clearInterval(gameTimerId)\r\n      clearInterval(obstaclesTimerId)\r\n      clearInterval(obstaclesTimerIdTwo)\r\n      setIsGameOver(true)\r\n    }\r\n  \r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={jump}>\r\n      <View style={styles.container}>\r\n        {isGameOver && <Text style={{fontSize: '30px'}}>{score}</Text>}\r\n        <Bird \r\n          birdBottom = {birdBottom} \r\n          birdLeft = {birdLeft}\r\n        />\r\n        <Obstacles \r\n          color={'green'}\r\n          obstacleWidth = {obstacleWidth}\r\n          obstacleHeight = {obstacleHeight}\r\n          randomBottom = {obstaclesNegHeight}\r\n          gap = {gap}\r\n          obstaclesLeft = {obstaclesLeft}\r\n        />\r\n        <Obstacles \r\n          color={'yellow'}\r\n          obstacleWidth = {obstacleWidth}\r\n          obstacleHeight = {obstacleHeight}\r\n          randomBottom = {obstaclesNegHeightTwo}\r\n          gap = {gap}\r\n          obstaclesLeft = {obstaclesLeftTwo}\r\n        />\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'red',\r\n  },\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}